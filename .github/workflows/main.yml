name: Android CI (React Native 0.72.14)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: {}

jobs:
  build-android:
    name: Build Android Debug APK
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Enable Corepack & Yarn 4.2.2
        run: |
          corepack enable
          corepack prepare yarn@4.2.2 --activate

      # 关键：显式关闭 immutable（CI=true 时默认是开的）
      - name: Install dependencies (allow lockfile updates)
        run: yarn install --no-immutable
      
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      # JDK 17（RN 0.72 / AGP 8 需要 Java 17）
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 安装 Android SDK（无需模拟器，仅构建即可）
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # 可选：Gradle 缓存（加速构建）
      - name: Setup Gradle (cache)
        uses: gradle/actions/setup-gradle@v3

      # 赋予 gradlew 执行权限
      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Make assets dir & bundle JS (Release)
        run: |
          mkdir -p android/app/src/main/assets
          npx react-native bundle \
            --platform android \
            --dev false \
            --entry-file index.js \
            --bundle-output android/app/src/main/assets/index.android.bundle \
            --assets-dest android/app/src/main/res/

      # 解码 keystore（如果有 secrets 就解码，否则跳过）
      - name: Decode keystore (optional)
        run: |
          if [ -n "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" ]; then
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/release.keystore
          echo "Decoded keystore to android/app/release.keystore"
          else
          echo "No ANDROID_KEYSTORE_BASE64 provided. Will build unsigned release."
          fi

      # 将签名变量写入 gradle.properties（如果有 secrets）
      - name: Write signing to gradle.properties (optional)
        run: |
          mkdir -p ~/.gradle
          if [ -n "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" ] && \
             [ -n "${{ secrets.ANDROID_KEY_ALIAS }}" ] && \
             [ -n "${{ secrets.ANDROID_KEY_PASSWORD }}" ]; then
          cat >> ~/.gradle/gradle.properties <<'EOF'
          MYAPP_UPLOAD_STORE_FILE=release.keystore
          MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}
          MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}
          EOF
          echo "Signing props written to ~/.gradle/gradle.properties"
          else
          echo "Signing secrets not fully provided. Will build unsigned release."
          fi
      
      - name: Build APK (assembleRelease)
        working-directory: android
        run: ./gradlew --no-daemon assembleRelease

      # 上传 APK 供下载
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error
