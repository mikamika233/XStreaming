name: Android CI (React Native 0.72.14)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: {}

jobs:
  build-android:
    name: Build Android Debug APK
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Node 20，且强制使用 Yarn 1.x（与 README 要求一致）
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Ensure Yarn 1.22
        run: npm i -g yarn@4.2.2

      # JDK 17（RN 0.72 / AGP 8 需要 Java 17）
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 安装 Android SDK（无需模拟器，仅构建即可）
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # 可选：Gradle 缓存（加速构建）
      - name: Setup Gradle (cache)
        uses: gradle/actions/setup-gradle@v3

      # 安装 JS 依赖（使用 yarn）
      - name: Install dependencies
        run: yarn install --frozen-lockfile || yarn install

      # 赋予 gradlew 执行权限
      - name: Make gradlew executable
        run: chmod +x android/gradlew

      # 构建 Debug APK（CI 常用；如需 Release 可改 assembleRelease 并配置签名）
      - name: Build Android debug
        working-directory: android
        env:
          # 按需覆盖环境变量，例如 NDK/SDK 版本、或 Detox 等工具的需求
          # ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
          # ORG_GRADLE_PROJECT_android.useAndroidX: true
          # ORG_GRADLE_PROJECT_android.enableJetifier: true
          CI: "true"
        run: ./gradlew assembleDebug

      # 上传 APK 供下载
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error
